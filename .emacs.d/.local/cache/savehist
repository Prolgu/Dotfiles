;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(compile-history read-expression-history consult--buffer-history command-history helm-M-x-input-history empty-history evil-ex-search-history evil-ex-history minibuffer-history))
(setq read-expression-history '("(executable-find \"cargo\")"))
(setq consult--buffer-history '("main.rs􀀁" "*lsp-log*􀀁" "test_microondas.org􀀁" "*helm find files*􀀁"))
(setq command-history '((kill-buffer "*compilation*<adivina-numero>") (rust-run) (rust-run) (rustic-cargo-check) (rustic-cargo-fmt) (evil-delete 164 165 'line nil nil) (evil-delete 536 537 'line nil nil) (lsp nil) (eval-expression '(executable-find "cargo") nil nil 127) (doom/reload) (kill-buffer "*Buffer List*") (kill-buffer "*helm-mode-kill-buffer*") (kill-buffer "*Buffer List*") (kill-buffer "*helm-mode-magit-status*") (all-the-icons-install-fonts nil) (doom/reload) (kill-buffer "test_microondas.org") (kill-buffer "*helm find files*") (kill-buffer "*compilation*<.emacs.d>") (doom/reload) (doom/reload) (kill-buffer "*compilation*<.emacs.d>") (doom/reload) (evil-org-delete 1 2 'line nil nil) (evil-org-delete 655 656 'line nil nil) (evil-org-delete 523 524 'line nil nil) (evil-org-delete 288 289 'line nil nil) (evil-replace 658 659 'exclusive 42) (evil-replace 657 658 'exclusive 42) (evil-replace 525 527 'inclusive 42) (evil-replace 288 290 'inclusive 42) (evil-replace 54 56 'inclusive 42) (evil-replace 54 56 'inclusive 56) (evil-replace 27 28 'exclusive 42) (evil-delete 600 601 'line nil nil) (evil-change 198 206 'inclusive nil nil) (dired "/home/sabaoth/" nil) (kill-buffer "*helm find files*") (company-diag)))
(setq helm-M-x-input-history '(#("Ordering" 0 8 (fontified t face font-lock-type-face)) "rus" "rustic" "car" "lsp" "doo" "all-the" "doo" "diag"))
(setq evil-ex-search-history '("rest" "prett" "##" "ivy" "rust"))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("rustc " 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq minibuffer-history '("*compilation*<adivina-numero>" "/home/sabaoth/Develop/CodeRS/adivina-numero/src/" "/home/sabaoth/Develop/CodeRS/aprender/src/" "/home/sabaoth/Develop/Coder" "/home/sabaoth/Develop/CodeRS/calc/src/" "/home/sabaoth/.doom.d/" "*scratch*" "/home/sabaoth/.doom.d/" "/home/sabaoth/Documentos/ORG/" "/home/sabaoth/.doom.d/" "/home/sabaoth/Develop/CodeRS/asd.rs" "/home/sabaoth/test" "*scratch*" "*compilation*<.emacs.d>" "/home/sabaoth/test" "/home/sabaoth/tes" "*compilation*<.emacs.d>" "/home/sabaoth/test" "/home/sabaoth/Documentos/Docs/" "/home/sabaoth/test" "/home/sabaoth/test_microondas.org" "/home/sabaoth/tes" "/home/sabaoth/Documentos/ORG/" "/home/sabaoth/Develop/CodeC/asd.c" "/home/sabaoth/Develop/CodeRS/aprender/src/" "/home/sabaoth/" "*helm find files*" "/home/sabaoth/asd.c" "/home/sabaoth/.doom.d/"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq evil-jumps-history '((3719 "/home/sabaoth/.doom.d/init.el")))
(setq kill-ring '("
" "
" "if x {
    
}
" "fn function_name() -> i32 {
    
}
" "Command \"rls\" is present on the path.
Command \"rust-analyzer\" is not present on the path.
Command \"rls\" is present on the path.
Command \"rust-analyzer\" is not present on the path.
Command \"rls\" is present on the path.
Command \"rust-analyzer\" is not present on the path.
" "" " " "✸" "⁖" "✸" "○" "⁖" "○" "⁖" "◉" "⁖" "fn function_name() -> i32 {
    
}
if x {
    
}
" "de pausa" "
" "#+TITLE: Mis notas sobre Emacs
" "#+TITLE: Test Microondas
" "#+STARTUP: overview
#+TITLE: Mis notas sobre Emacs
#+AUTHOR: Matt Mjolner
#+OPTIONS: toc:nil
" "
" "
" "
" "# Pruebas a un microondas

## Pruebas basicas
- Al enchufar encienda y muestre que lo esta
- Al darle al boton de 30's setee y active correctamente su funcionamiento
- Al asignarle tiempo lo asigne correctamente
- Al darle nuevamente agrege el tiempo asignado

## En funcionamiento:
- La luz encienda
- En funcionamiento el plato gire 
- Caliente al asignarle tiempo
- El sistema corte cuando se abre la puerta
- El tiempo de trabajo sea realmente el asignado
- El boton de pausa pause el sistema

## En pausa
- Al oprimir nuevamente el boton de pausa se limpie el set del tiempo
- AL agregar tiempo que lo agregue correctamente

## Pruebas mas tecnicas:
- Escape de radiofrecuencia en encendido
- Velocidad de corte en apertura
- Temperatura interna de componentes en funcionamiento
- Consumo de trabajo
- Consumo en vacio

" "
" "if x==2  {

}
" "_name" "function" "fn function_name() -> i32 {
    
}
" "#include \"asd.h\"

#include \"#include <stdio.h>\"
"))
(setq register-alist '((48 . "Command \"rls\" is present on the path.
Command \"rust-analyzer\" is not present on the path.
Command \"rls\" is present on the path.
Command \"rust-analyzer\" is not present on the path.
Command \"rls\" is present on the path.
Command \"rust-analyzer\" is not present on the path.
")))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
