# PLugin Manager installer
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"


# Setting the prefix from C-b to C-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Setting the delay between prefix and command
set -sg escape-time 0

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 0

# Open ~/.tmux.conf in vim and reload settings on quit
unbind e
bind e new-window -n '~/.tmux.conf' "sh -c 'nvim ~/.tmux.conf && tmux source ~/.tmux.conf'"

# Reload the file with prefix-r
bind r source-file ~/.tmux.conf \; display "tmux.conf reloaded!"


# Use vi mode for working with buffer
setw -g mode-keys vi
set-window-option -g status-keys vi

# Vi copy mode: pbcopy is installed on macOS y default, on Linux xclip needs to be installed
bind-key -T copy-mode-vi v send -X begin-selection
if-shell "uname | grep -q Darwin" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'"
if-shell "uname | grep -q Darwin" "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'"
if-shell "uname | grep -q Linux" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -filter -selection primary | xclip -in -selection clipboard > /dev/null'"
if-shell "uname | grep -q Linux" "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -filter -selection primary | xclip -in -selection clipboard > /dev/null'"

# Splitting panes with | and -
bind = split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Moving between panes with prefix-h, j, k, l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Don't prompt to kill panes/windows.
bind x kill-pane
bind X kill-window

# Mouse support
set -g mouse on

# Set the default terminal terminfo
set -g default-terminal "tmux-256color"

# Update the status line every sixty seconds
set -g status-interval 10

# Default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# Default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# Default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# Active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# Set active pane border color
set-option -g pane-active-border-style fg=colour214

# Set inactive pane border color
set-option -g pane-border-style fg=colour239

# Message info
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# Pane number display
set-option -g display-panes-active-colour colour1 #fg2
set-option -g display-panes-colour colour237 #bg1

# Clock
set-window-option -g clock-mode-colour colour109 #blue

# Bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

set-option -g status-left "\
#[fg=black, bg=cyan]#{?client_prefix,#[bg=colour167],} ‚ùê #S \
#[fg=colour241, bg=colour237]#{?client_prefix,#[fg=colour167],} #{?window_zoomed_flag, üîç,}"

set-option -g status-right "\
#[fg=colour214, bg=colour237]  \
#[fg=colour237, bg=colour214] #(~/.scripts/ssid.sh)  \
#[fg=colour248, bg=colour239]"

#set-option -g status-right "\
##[fg=colour214, bg=colour237]  \
##[fg=colour237, bg=colour214] #(~/.scripts/ssid.sh)  \
##[fg=colour223, bg=colour237] #(~/dotfiles/tmux_scripts/music.sh) \
##[fg=colour246, bg=colour237] | %b %d '%y\
##[fg=colour109] | %H:%M \
##[fg=colour248, bg=colour239]"

set-window-option -g window-status-current-format "\
#[fg=colour237, bg=colour214] \
#[fg=colour239, bg=colour214] #I* |\
#[fg=colour239, bg=colour214, bold] #W \
#[fg=colour214, bg=colour237] "

set-window-option -g window-status-format "\
#[fg=colour237,bg=colour239,noitalics] \
#[fg=colour223,bg=colour239] #I |\
#[fg=colour223, bg=colour239] #W \
#[fg=colour239, bg=colour237] "

# Set the history limit so we get lots of scrollback.
setw -g history-limit 50000000



# # Set the status line's color
# set -g status-style fg=white

# # Set the color of the window list
# setw -g window-status-style fg=blue,bold,bg=black

# # Set the color of the active window
# setw -g window-status-current-style fg=yellow,bold,bg=black

# # Status line left side
# set -g status-left "#[bg=cyan,bold]#[fg=black,bold][#S]"

# # Status line right side
# # set -g status-right "#[bg=cyan,bold]%d-%b %R #[fg=black,bold]#h"
# set -g status-right "#[bg=cyan,bold]#[fg=black,bold] #(./.scripts/ssid.sh) | #h "

# # Update the status line every sixty seconds
# set -g status-interval 10

# # Centre the window list in the status line
# set -g status-justify left

# # Message settings
# set -g message-style fg=red,bold,bg=black







# Use tmuxline.vim snapshot file
if-shell "test -f ~/.config/tmux/tmuxline.snapshot" "source ~/.config/tmux/tmuxline.snapshot"

# Update $DISPLAY and/or tmuxline
set-hook -g client-attached 'run-shell ~/.config/tmux/update_display_tmuxline.sh'
set-hook -g client-session-changed 'run-shell ~/.config/tmux/update_tmuxline.sh'
set -g focus-events on
set-hook -g pane-focus-in 'run-shell ~/.config/tmux/update_tmuxline.sh'



# True colour support
set -as terminal-overrides ",xterm*:Tc"

# Set and reset the cursor style
set -ag terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[5 q'

# Italics, needed by iTerm2
set -as terminal-overrides ',*:sitm=\E[3m'

# Curly underline, needed by kitty and iTerm2
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Coloured underline
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
