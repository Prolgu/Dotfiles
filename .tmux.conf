# vim: foldmethod=marker:ft=tmux

# PLugin Manager {{{1
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Env {{{1

setenv -g FZF_DEFAULT_COMMAND 'find -L'
setenv -g FZF_DEFAULT_OPTS '--color=dark,fg:7,bg:-1,hl:5,fg+:15,bg+:8,hl+:13,info:2,prompt:4,pointer:1,marker:3,spinner:4,header:4'


# Plugins {{{1

set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'laktak/extrakto'

# set -g @yank_selection_mouse 'clipboard'
# set -g @extrakto_split_direction 'a'
# set -g @extrakto_split_size '10'
# set -g @extrakto_fzf_tool '/home/georgi/.fzf/bin/fzf'
# set -g @extrakto_fzf_layout 'reverse'

# General {{{1

# Use Ctrl+A as the leader
unbind C-a
set -g prefix C-a
bind C-a send-prefix

# Use xterm-256color
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Set and reset the cursor style
set -ag terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[5 q'

# Use vi mappings
setw -g mode-keys vi

# Enable mouse
set -g mouse on

# Start window and pane indices at 1
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber tmux windows
set -g renumber-windows on

# Update the status line every sixty seconds
set -g status-interval 5

# Length of the history
set -g history-limit 100000


# Visuals {{{1

# Activity monitoring
set -g bell-action none
set -g visual-bell off
set -g visual-silence off
set -g visual-activity off
setw -g monitor-activity off
# setw -g monitor-activity on
# set -g visual-activity on

# Pane borders
set -g pane-border-style fg=colour008 # fg=darkgray
set -g pane-active-border-style fg=colour012 # fg=lightblue

# Style
set -g mode-style bg=colour000,fg=colour003 # fg=yellow
set -g message-style fg=colour012 # fg=lightblue
set -g message-command-style fg=colour005 # fg=magenta

# True colour support
set -as terminal-overrides ",xterm*:Tc"

# Set and reset the cursor style
set -ag terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[5 q'

# Set terminal 
set -g set-titles on
set -g set-titles-string "#T"

# Evita el relleno de puntos
set -g window-size largest


# Status bar {{{1

set -g status "on"
set -g status-position bottom
set -g status-justify "left"
set -g status-style fg=colour002 # fg=darkgray
# set -g status-style bg=black # fg=darkgray

# Left status
set -g status-left-style 'align=left'
set -g status-left-length "100"
set -g status-left-style fg=colour008 # fg=darkgray
# set -ga status-left "#{?client_prefix,#[fg=colour012] \uf6d7 ,}" # fg=lightblue
set -ga status-left "#{?client_prefix,#[fg=colour012]\u2B83 ,}" # fg=lightblue
set -ga status-left "#{?pane_in_mode,#[fg=colour003] \uf68e ,}" # fg=yellow
set -ga status-left "#{?window_zoomed_flag,#[fg=colour002] \uf848 ,}" # fg=green
set -ga status-left "#{?pane_synchronized,#[fg=colour001] \uf46a ,}" # fg=red

# set-option -ga status-left " #{?client_prefix,#[bg=colour167],} #S #[fg=colour237, bg=colour241]#{?client_prefix,#[fg=colour167],} "

# Right status
set -g status-right-style 'align=right'
set -g status-right-length "100"
set -g status-right " #[fg=colour003][#(~/.scripts/batt_stat.sh)] "
set -ga status-right " #[fg=colour003][#(~/.scripts/crrnt.sh)] "
set -ga status-right " #[fg=colour002]#(~/.scripts/ssid.sh) "

# set -ga status-right "#{?client_prefix,#[fg=colour012] \uf6d7 ,}" # fg=lightblue
# set -ga status-right "#{?pane_in_mode,#[fg=colour003] \uf68e ,}" # fg=yellow
# set -ga status-right "#{?window_zoomed_flag,#[fg=colour002] \uf848 ,}" # fg=green
# set -ga status-right "#{?pane_synchronized,#[fg=colour001] \uf46a ,}" # fg=red

# Window status

setw -g window-status-separator " "
setw -g window-status-style fg=colour008 # fg=darkgray
setw -g window-status-format "#W"

setw -g window-status-current-style fg=colour012,bold # fg=lightblue
setw -g window-status-current-format "[ #W ]"

# opciones para tener el workdir y la aplicacion que corre
set-option -g automatic-rename on
set-option -g automatic-rename-format "#{?#{==:#{pane_current_command},zsh},#{b:pane_current_path},#{pane_current_command}}"


# Key bindings {{{1

# Use 'C-y' to toggle synchronize-panes
bind C-y setw synchronize-panes

# Use 'v' to switch to visual mode
bind -T copy-mode-vi 'v' send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Smart pane switching with awareness of Vim splits.
# PILOT_ROOT=$HOME/.local/share/nvim/site/pack/packer/start/vim-tmux-pilot
# source-file $PILOT_ROOT/pilot.tmux

# Open ~/.tmux.conf in vim and reload settings on quit
unbind e
bind e new-window -n '~/.tmux.conf' "sh -c 'nvim ~/.tmux.conf && tmux source ~/.tmux.conf'"

# Reload the file with prefix-r
bind r source-file ~/.tmux.conf \; display "Recargado!"

# Don't prompt to kill panes/windows.
bind x kill-pane
bind X kill-window

# Set window split
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -c "#{pane_current_path}"

# Resizing panes
bind z resize-pane -Z
bind - resize-pane -D 20
bind + resize-pane -U 20
bind < resize-pane -L 20
bind > resize-pane -R 20

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# }}}

# Initialize TMUX plugin manager
run -b '~/.tmux/plugins/tpm/tpm'

# if run as "tmux attach", create a session if one does not already exist
# new-session -n work
